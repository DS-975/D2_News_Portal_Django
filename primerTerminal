Можно ли все удалить настройки shell ?
Видимо вы хотите отчисть базу данных, да, это можно сделать, вот алгоритм:
1. Удаляйте файл db.sqlite3
2. Удаляйте файлы миграции в app/migrations, кроме __init__.py
3. python manage.py makemigrations
4. python manage.py migrate

И как потом всё сохранить при завершение настройки, в shell ?
Что именно сохранить? Все переменные в shell существует в рамках одной рабочей сессии, после выхода все удаляется, это стандартное поведение в интерактивном режиме.

Windows PowerShell
(C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.

Попробуйте новую кроссплатформенную оболочку PowerShell (https://aka.ms/pscore6)

(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django> pip list
Package           Version
----------------- -------
Django            4.2.6
pip               23.3.1
setuptools        68.2.0
sqlparse          0.4.4
tzdata            2023.3
wheel             0.41.2

(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django> cd .\project\

(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django\project> python manage.py makemigrations
Migrations for 'newapp':
  newapp\migrations\0001_initial.py
    - Create model Author
    - Create model Category
    - Create model Post
    - Create model PostCategory
    - Add field postCategory to post
    - Create model Comment
(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django\project> python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, newapp, sessions
Running migrations:
  Applying newapp.0001_initial... OK
(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django\project> python manage.py shell
Python 3.9.9 (tags/v3.9.9:ccb0e6a, Nov 15 2021, 18:08:50) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)

>>> from newapp.models import *

>>> u1 = User.objects.get(username='Semyon')
>>> u1
<User: Semyon>

>>> u1 = User.objects.get(username='Sem')
>>> u1
<User: Sem>

>>> Author.objects.create(authorUser=u1)
<Author: Author object (2)>

<User: User_2>
>>> u1 = User.objects.create_user(username='User_1')
>>> u1
<User: User_1>
>>> u2
<User: User_2>

>>> Author.objects.create(authorUser=u1)
<Author: Author object (3)>

>>> Category.objects.create(name='IT')
<Category: Category object (1)>

>>> author = Author.objects.get(id=1)

>>> author
<Author: Author object (1)>


>>> u1 = User.objects.get(username='User_1')
>>> u1
<User: User_1>
>>> u2 = User.objects.get(username='User_2')
>>> u2
<User: User_2>
>>> Author
<class 'newapp.models.Author'>
>>> author

>>> Author.objects.get(authorUser=u1)
<Author: Author object (3)>

>>> Category.objects.get(name='IT')
<Category: Category object (1)>

>>> Category.objects.get(name='IT')
<Category: Category object (1)>

>>> author = Author.objects.get(id=3)

>>> author
<Author: Author object (3)>

>>> Post.objects.create(author=author, categoryType='NW', title='sometitle', text='somebigtext')
<Post: Post object (1)>

>>> Post.objects.get(id=1)
<Post: Post object (1)>

>>> Post.objects.get(id=1).title
'sometitle'

>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))

>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='anytextbyauthor')
<Comment: Comment object (1)>

>>> Comment.odjects.get(id=1).like()

>>> Comment.objects.get(id=1).like()

>>> Comment.objects.get(id=1).rating
1

>>> Comment.objects.get(id=1).dislike()

>>> Comment.objects.get(id=1).dislike()

>>> Comment.objects.get(id=1).dislike()

>>> Comment.objects.get(id=1).rating
-2

>>> Author.objects.get(id=3)
<Author: Author object (3)>

>>> Author.objects.get(id=1)
<Author: Author object (1)>

>>> a = Author.objects.get(id=1)

>>> a.update_rating()

>>> a.ratingAuthor
0

>>> Author.objects.get(id=3)
<Author: Author object (3)>

>>> a = Author.objects.get(id=1)

>>> a.update_rating()
Ошибка

>>> a.ratingAuthor
0

>>> Author.objects.get(id=3)
<Author: Author object (3)>

>>> a = Author.objects.get(id=1)

>>> a.ratingAuthor
0

>>> a = Author.objects.get(id=3)

>>> a.ratingAuthor
0

>>> a = Author.objects.get(id=2)

>>> a.ratingAuthor
0

>>> Post.objects.get(id=1).like
<bound method Post.like of <Post: Post object (1)>>

>>> Comment.objects.get(id=1).like()

>>> Comment.objects.get(id=1).like()

>>> Comment.objects.get(id=1).rating
0

>>> Comment.objects.get(id=1).like()

>>> Comment.objects.get(id=1).like()

>>> Comment.objects.get(id=1).like()

>>> Comment.objects.get(id=1).rating
3

>>> Author.objects.get(id=1)
<Author: Author object (1)>

>>> a.ratingAuthor
0

>>> a.ratingAuthor
0

>>> Comment.objects.get(id=1).rating
3

>>> a = Author.objects.order_by('-ratingAuthor')[:1]

>>> a

>>> exit()

(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django\project> python manage.py makemigrations
Migrations for 'newapp':
  newapp\migrations\0001_initial.py
    - Create model Author
    - Create model Category
    - Create model Post
    - Create model PostCategory
    - Add field postCategory to post
    - Create model Comment

(venv) PS C:\Users\comp007\Desktop\399\News_Portal_Django\project> python manage.py shell
Python 3.9.9 (tags/v3.9.9:ccb0e6a, Nov 15 2021, 18:08:50) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)

>>> from newapp.models import *

>>> u1 = User.objects.get(username='User_1')

>>> u1
<User: User_1>

>>> u2 = User.objects.get(username='User_2')

>>> u2
<User: User_2>

>>> Author.objects.get(authorUser=u1)
<Author: Author object (3)>
